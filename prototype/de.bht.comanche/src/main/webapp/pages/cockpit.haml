%ptj-menu

.container
  / %div#temporary-debug-output selectedInvite: '{{ selectedInvite }}'
  .panel.panel-default
    .panel-body
      .col-md-6
        .tabbable
          %ul.nav.nav-tabs
            %li.active
              %a{"data-toggle" => "tab", :href => "#surveyTab", "ng-click" => "showSurveyDetails = true", "onclick" => "return false;"}
                Survey
                %span.badge {{surveys.length}}
            %li
              %a{"data-toggle" => "tab", "href" => "#inviteTab", "ng-click" => "showSurveyDetails = false", "onclick" => "return false;"}
                Invite
                %span.badge {{(invites | filter: {ignored: "!YES"}).length}}
            %li
              %a{"data-toggle" => "tab", :href => "#ignoredInviteTab", "ng-click" => "showSurveyDetails = false", "onclick" => "return false;"}
                Ignored
                %span.badge {{(invites | filter: {ignored: "YES"}).length}}
            %li
              %a{"data-toggle" => "tab", :href => "#messagesTab", "onclick" => "return false;"}
                Messages
                %span.badge {{messages.length}}

          .tab-content

            #surveyTab.tab-pane.active
              %input#surveyFilter.form-control{"ng-change" => "updateSelection()", "ng-model" => "searchSurvey", :placeholder => "Filter surveys ...", :type => "search"}
              #surveyList.list-group
                %a.list-group-item{"ng-click" => "selectSurvey(survey)", :href => "", "ng-repeat" => "survey in surveys | filter: searchSurvey"}
                  .row
                    .col-sm-8 {{survey.name}}
                    .btn-groups{"ng-if" => "survey.isReady()"}
                      %label.btn.btn-primary.btn-sm{"btn-radio" => "'accept'", "ng-model" => "radioModel", "ng-click" => "confirm()","onclick" => "return false;"}
                        %span.glyphicon.glyphicon-ok
                      %label.btn.btn-primary.btn-sm{"btn-radio" => "'accept'", "ng-model" => "radioModel", "ng-click" => "reject()","onclick" => "return false;"}
                        %span.glyphicon.glyphicon-remove
                    .btn-groups{"ng-if" => "survey.isSuccessful()"}
                      %span.glyphicon.glyphicon-thumbs-up
                    .btn-groups{"ng-if" => "survey.isUnsuccessful()"}
                      %span.glyphicon.glyphicon-remove-down

            #inviteTab.tab-pane
              %input#inviteFilter.form-control{"ng-change" => "updateSelection()", "ng-model" => "searchInvite", :placeholder => "Filter invites ...", :type => "search"}
              #inviteList.list-group
                %a.list-group-item{"ng-click" => "selectInvite(invite);", :href => "", "ng-repeat" => "invite in invites | filter: {ignored: '!YES', name: searchInvite} "}
                  .row
                    .col-sm-8 {{invite.survey.name}} {{invite.ignored}}
                    .btn-group
                      %label.btn.btn-primary.btn-sm{"btn-radio" => "'accept'", "ng-model" => "radioModel", "ng-click" => "setSelectedInviteStatus('UNDECIDED')","onclick" => "return false;"}
                        %span.glyphicon.glyphicon-question-sign
                      %label.btn.btn-primary.btn-sm{"btn-radio" => "'accept'", "data-target" => "#calendarModal", "data-toggle" => "modal","ng-model" => "radioModel", "ng-click" => "setSelectedInviteStatus('NO')"}
                        %span.glyphicon.glyphicon-ok
                      #calendarModal.modal.fade.bs-example-modal-lg{"aria-hidden" => "true", "data-target" =>".bs-example-modal-lg", :role => "dialog", :tabindex => "-1"}
                        .modal-dialog.modal-lg
                          .modal-content
                            .modal-header
                              %button.close{"aria-label" => "Close", "data-dismiss" => "modal", :type => "button"}
                                %span{"aria-hidden" => "true"} Ã—
                              %h4.modal-title Please choose your Avaibilities
                            .modal-body
                              %ptj-calendar{"possible" => "possibleTimePeriods", "resulting" => "selectedInvite.timePeriods"}
                            .modal-footer
                              %button.btn.btn-default{"data-dismiss" => "modal", :type => "button"} Cancel
                              %button.btn.btn-primary{"data-dismiss" => "modal", :type => "button", "ng-click" => "saveAvailabilities()"} Save changes
                      %label.btn.btn-primary.btn-sm{"btn-radio" => "'ignore'", "ng-model" => "radioModel", "ng-click" => "setSelectedInviteStatus('YES')", "onclick" => "return false;"}
                        %span.glyphicon.glyphicon-remove

            #ignoredInviteTab.tab-pane
              %input#ignoredFilter.form-control{"ng-change" => "updateSelection()", "ng-model" => "searchIgnored", :placeholder => "Filter ignored invites ...", :type => "search"}
              #ignoredList.list-group
                %a.list-group-item{"ng-click" => "selectInvite(invite);", :href => "", "ng-repeat" => "invite in invites | filter: {ignored : 'YES', name: searchIgnored} "}
                  .col-sm-8 {{invite.survey.name}} {{invite.ignored}}
                  %label.btn.btn-primary.btn-sm{"btn-radio" => "'reaccept'", "ng-model" => "radioModel", "ng-click" => "setSelectedInviteStatus('NO')", "onclick" => "return false;"}
                    reaccept

            #messagesTab.tab-pane
              %input#messagesFilter.form-control{"ng-change" => "updateSelection()", "ng-model" => "searchMessages", :placeholder => "Filter messages ...", :type => "search"}
              #messageList.list-group
                %a.list-group-item{:href => "", "ng-repeat" => "message in messages | filter: searchMessages"}
                  .row
                    .col-sm-8 {{ message }}

      #surveyDetails.col-md-6{"ng-show" => "showSurveyDetails"}
        %input#addSurvey.btn.btn-primary{"ng-click" => "addSurvey()", :type => "button", :value => "Create a survey"}
        %input#editSurvey.btn.btn-primary{"ng-click" => "editSurvey()", :type => "button", :value => "Show and edit selected survey"}
        %input#deleteSurvey.btn.btn-primary{"ng-click" => "deleteSelectedSurvey()", :type => "button", :value => "Delete selected survey"}
        .panel.panel-default
          .panel-body
            %h2.text-warning{} {{ selectedSurvey.name }}
            %div{} {{ selectedSurvey.description }}
            %p
            %label{:for => "deadline"} Deadline:
            %span#deadline{} {{selectedSurvey.deadline | date:'yyyy-MM-dd HH:mm'}}
            %div#selectedSurveyTimePeriod{"ng-if" => "selectedSurvey.algoChecked"}
              %label{:for => "determinedTimePeriod"} Determined Time Period:
              %span#determinedTimePeriod{} {{ selectedSurvey.determinedTimePeriod ? (selectedSurvey.determinedTimePeriod.startTime | date: 'yyyy-MM-dd HH:mm') : "None" }}
            %h4 Participants:
            %span#selectedSurveyParticipants{"ng-if" => "!selectedSurvey.hasParticipants()"}
              %ul
                %li{} None
            %ul
              %li{"ng-repeat" => "invite in selectedSurvey.invites | filter: host == false"}
                %strong{} {{invite.user.name}}
                (E-Mail: {{invite.user.email}}, Tel: {{invite.user.tel}})

      #inviteDetails.col-md-6{"ng-hide" => "showSurveyDetails"}
        .panel.panel-default
          .panel-body
            %h2.text-warning{} {{ selectedInvite.survey.name }}
            %div{} {{ selectedInvite.survey.description }}
            %p
            %label{:for => "deadline"} Deadline:
            %span#deadline{} {{ selectedInvite.survey.deadline | date: 'yyyy-MM-dd HH:mm' }}
            %div#selectedInviteStatus{"ng-if" => "selectedInvite.survey.success != 'UNDECIDED'"}
              %div#selectedInviteStatus{"ng-if" => "selectedInvite.survey.success == 'NO'"}
              %label{:for => "determinedTimePeriod"}  Determined Time Period:
              %div#determinedTimePeriod{}
                %div{} {{ selectedInvite.survey.determinedTimePeriod.startTime | date:'yyyy-MM-dd HH:mm' }}
                %div{} {{ selectedInvite.survey.determinedTimePeriod.durationMins }} minutes
